pipeline {
    agent any
    stages {
        stage ('Build BackEnd') {
            steps {
                sh 'mvn clean package -DskipTests=true'
            }
        }
        stage ('Slack Build') {            
            steps {
                slackSend message: 'Build de projeto-teste executado com sucesso'                
            }            
        }
        stage ('Testes Unitarios') {
            steps {
                sh 'mvn test'
            }
        }
        stage ('Slack Testes Unitarios') {            
            steps {
                slackSend message: 'Testes unit치rios de projeto-teste executados com sucesso'                
            }            
        }
        stage ('Analise do Sonar') {
            environment {
                scannerHome = tool 'SONAR_SCANNER'
            }
            steps {
                withSonarQubeEnv('SONAR_LOCAL') {
                    sh "${scannerHome}/bin/sonar-scanner -e -Dsonar.projectKey=DeployBack -Dsonar.host.url=http://localhost:9001 -Dsonar.login=f88f779ffa11a18a859bc1532d41d1933276b29f -Dsonar.java.binaries=target"
                }
            }
        }
        stage ('Slack Analise de c칩digo') {            
            steps {
                slackSend message: 'Analise est치tica de c칩digo de projeto-teste feita com sucesso'                
            }            
        }       
        stage ('Testes Funcionais') {
            steps {
                dir('functional-test')
                git credentialsId: 'github_login', url: 'https://github.com/domlemos/functional-task.git'
                sh 'mvn test'
            }
        }
    }
}

